{"version":3,"sources":["components/Header/img/logo.svg","serviceWorker.js","helpers/history.tsx","constants/input.constants.tsx","constants/api.constants.tsx","constants/navmenu.constants.tsx","constants/requestsTable.constants.tsx","reducers/input.reducer.tsx","reducers/index.tsx","helpers/store.tsx","components/Header/Header.tsx","components/Footer/Footer.tsx","components/NavMenu/NavMenu.tsx","components/Input/Input.tsx","components/InputNumber/InputNumber.tsx","components/Steps/Steps.tsx","components/Breadcrumbs/Breadcrumbs.tsx","components/Select/Select.tsx","components/AutoComplete/AutoComplete.tsx","components/Dragger/Dragger.tsx","components/Radio/Radio.tsx","components/RadioGroup/RadioGroup.tsx","components/DatePicker/DatePicker.tsx","components/TextArea/TextArea.tsx","components/ActivityOption/ActivityOption.tsx","components/RequestStatus/RequestStatus.tsx","helpers/antd-redux-form.tsx","helpers/api.tsx","services/input.service.js","actions/input.actions.tsx","pages/steps/1/forms/Common/constants.tsx","pages/steps/1/forms/Common/validate.tsx","pages/steps/1/forms/Common/Common.tsx","pages/steps/1/forms/Common/warn.tsx","pages/steps/1/forms/Passport/constants.tsx","pages/steps/1/forms/Passport/validate.tsx","pages/steps/1/forms/Passport/Passport.tsx","pages/steps/1/forms/Passport/warn.tsx","pages/steps/1/forms/Files/constants.tsx","pages/steps/1/forms/Files/Files.tsx","pages/steps/1/forms/Files/validate.tsx","pages/steps/1/forms/Files/warn.tsx","pages/steps/1/forms/Registration/constants.tsx","pages/steps/1/forms/Registration/validate.tsx","pages/steps/1/forms/Registration/Registration.tsx","pages/steps/1/forms/Registration/warn.tsx","pages/steps/1/forms/Activity/Activity.tsx","pages/steps/1/step1.tsx","pages/Main/Main.tsx","pages/PersonalAccount/PersonalAccount.tsx","pages/FNSregistration/RequestsCommonInfo/RequestsCommonInfo.tsx","pages/FNSregistration/FNSregistration.tsx","App.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","history","createBrowserHistory","inputConstants","AUTOCOMPLETE_LOAD","AUTOCOMPLETE_LOAD_SUCCESS","AUTOCOMPLETE_LOAD_FAILED","baseURL","navMenuItems","controlPanel","title","icon","requests","subitems","FNSregistration","cashboxRegistration","russianRegistry","clients","first","second","settings","knowledgeBase","personalAccount","columns","withNaming","n","e","m","v","cn","dataIndex","initialState","lastChangedForm","lastChangedField","autoCompleteData","rootReducer","combineReducers","form","formReducer","input","state","arguments","length","undefined","action","field","meta","type","Object","objectSpread","inputName","defineProperty","data","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","b","userMenu","react_default","a","createElement","menu","Item","key","href","formMenu","Header","props","className","src","logo","es_button","size","dropdown","overlay","trigger","style","fontSize","color","avatar","backgroundColor","marginTop","marginLeft","Footer","SubMenu","Menu","NavMenu","width","mode","theme","menuJSON","subsCount","itemsCount","drawMenuRecursive","values","map","item","drawMenu","Step","AntdSteps","Steps","steps","currentStep","es_steps","direction","current","stepData","index","description","subTitle","Breadcrumbs","backLabel","items","concat","breadcrumb","text","defaultProps","Option","AntdSelect","AntdAutoComplete","TextArea","tip","touched","error","warning","es_input","ActivityOption","activityCode","activityTitle","onRemove","isStarFilled","filled","onClick","makeField","Component","_ref","children","rest","hasFeedback","label","objectWithoutProperties","assign","AInput","AAutoComplete","options","auto_complete","filterOption","inputValue","option","toUpperCase","indexOf","opt","AutoComplete_Option","value","ADragger","es_select","showSearch","val","upload","Dragger","ARadio","name","isButton","Fragment","es_radio","Button","ARadioGroup","Group","ADatePicker","date_picker","ATextArea","handleResponse","input_number","response","statusText","Promise","reject","then","JSON","parse","inputService","getAutoComplete","fetch","method","headers","Content-Type","inputActions","loadAutoComplete","dispatch","success","failure","formName","serverRequestNeededFields","sf","CommonForm","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","renderNalogRadio","Field","component","buttonStyle","_this$props","handleSubmit","onSubmit","connectedComponent","connect","reduxForm","validate","errors","secondName","getState","warn","PassportForm","placeholder","onFocus","preventDefault","onBlur","initialValues","citizenship","sex","FilesForm","RegistrationForm","suffix","ActivityForm","ActivityOption_ActivityOption_ActivityOption","Step1","_Component","inherits","createClass","1","divider","Passport_connectedComponent","Registration_connectedComponent","Activity_connectedComponent","Files_connectedComponent","breadcrumbsData","Main","renderAside","isStepLoading","changeStep","generateButton","disabled","Steps_Steps_Steps","Breadcrumbs_Breadcrumbs_Breadcrumbs","step1_Step1","PersonalAccount","NavMenu_NavMenu_NavMenu","RequestsCommonInfo","balance","total","processing","ended","archive","TabPane","Tabs","Select","commonInfo","tabs","selectedRowKeys","handleTabChange","tabIndex","console","log","handleSearchChange","query","handleShowedTableRows","renderTabs","es_tabs","onChange","tab","toString","renderTable","i","push","company","client","INN","Math","floor","random","dateCreated","Date","toLocaleDateString","phone","status","administration","table","dataSource","renderControls","target","defaultValue","FNSregistration_Option","RequestsCommonInfo_RequestsCommonInfo_RequestsCommonInfo","App","apply","Header_Header_Header","Router","Switch","Route","exact","path","Footer_Footer_Footer","moment","locale","ReactDOM","render","locale_provider","ru_RU","es","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b1b24d36.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.eccab73e.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();","export const inputConstants = {\r\n  AUTOCOMPLETE_LOAD: \"AUTOCOMPLETE_LOAD\",\r\n  AUTOCOMPLETE_LOAD_SUCCESS: \"AUTOCOMPLETE_LOAD_SUCCESS\",\r\n  AUTOCOMPLETE_LOAD_FAILED: \"AUTOCOMPLETE_LOAD_FAILED\"\r\n};\r\n\r\n// структура, в которой для каждого шага и каждой формы в шаге хранятся имена инпутов, для которых нужно грузить autocomplete-значения\r\nexport const AUTOCOMPLETE_INPUTS = {\r\n  Common: [\"secondName\"]\r\n};\r\n","export const baseURL = \"http://localhost:8000\";\r\n","export const navMenuItems = {\r\n  controlPanel: {\r\n    title: \"Панель управления\",\r\n    icon: \"pie-chart\"\r\n  },\r\n\r\n  requests: {\r\n    title: \"Заявки\",\r\n    icon: \"file-done\",\r\n    subitems: {\r\n      FNSregistration: {\r\n        title: \"Регистрация в ФНС\"\r\n      },\r\n      cashboxRegistration: {\r\n        title: \"Регистрация кассы\"\r\n      },\r\n      russianRegistry: {\r\n        title: \"Росреестр\"\r\n      }\r\n    }\r\n  },\r\n\r\n  clients: {\r\n    title: \"Клиенты\",\r\n    icon: \"user\",\r\n    subitems: {\r\n      first: {\r\n        title: \"Подменю клиентов 1\"\r\n      },\r\n      second: {\r\n        title: \"Подменю клиентов 2\"\r\n      }\r\n    }\r\n  },\r\n\r\n  settings: {\r\n    title: \"Настройки\",\r\n    icon: \"setting\",\r\n    subitems: {\r\n      first: {\r\n        title: \"Подменю настройки 1\"\r\n      },\r\n      second: {\r\n        title: \"Подменю настройки 2\"\r\n      }\r\n    }\r\n  },\r\n\r\n  knowledgeBase: {\r\n    title: \"База знаний\",\r\n    icon: \"info-circle\"\r\n  },\r\n\r\n  personalAccount: {\r\n    title: \"Лицевой счет\",\r\n    icon: \"solution\"\r\n  }\r\n};\r\n","import { withNaming } from \"@bem-react/classname\";\r\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"_\", v: \"_\" });\r\nconst b = cn(\"request-status\");\r\n\r\nexport const columns = [\r\n  {\r\n    title: \"Компания\",\r\n    dataIndex: \"company\"\r\n  },\r\n  {\r\n    title: \"Клиент\",\r\n    dataIndex: \"client\"\r\n  },\r\n  {\r\n    title: \"ИНН\",\r\n    dataIndex: \"INN\"\r\n  },\r\n  {\r\n    title: \"Создано\",\r\n    dataIndex: \"dateCreated\"\r\n  },\r\n  {\r\n    title: \"Телефон\",\r\n    dataIndex: \"phone\"\r\n  },\r\n  {\r\n    title: \"Статус\",\r\n    dataIndex: \"status\"\r\n  },\r\n  {\r\n    title: \"Управление\",\r\n    dataIndex: \"administration\"\r\n  }\r\n];\r\n","import { inputConstants } from \"src/constants/index\";\r\n\r\nconst initialState = {\r\n  lastChangedForm: \"\",\r\n  lastChangedField: \"\",\r\n  autoCompleteData: {}\r\n};\r\n\r\nexport function input(state = initialState, action: any) {\r\n  let field = \"\",\r\n    form = \"\";\r\n  if (action.meta) {\r\n    field = action.meta.field;\r\n    form = action.meta.form;\r\n  }\r\n  switch (action.type) {\r\n    case \"@@redux-form/CHANGE\":\r\n      return {\r\n        ...state,\r\n        lastChangedForm: form,\r\n        lastChangedField: field\r\n      };\r\n\r\n    case inputConstants.AUTOCOMPLETE_LOAD_SUCCESS: {\r\n      const { form, inputName } = action;\r\n      return {\r\n        ...state,\r\n        autoCompleteData: { ...state.autoCompleteData, [form]: { [inputName]: action.data } }\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\n\nimport { input } from \"./input.reducer\";\nimport { reducer as formReducer } from \"redux-form\";\n\nconst rootReducer = combineReducers({\n  form: formReducer,\n  input\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport rootReducer from \"src/reducers\";\n\nconst loggerMiddleware = createLogger();\n\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware, loggerMiddleware));\n","import React from \"react\";\r\nimport { withNaming } from \"@bem-react/classname\";\r\nimport logo from \"./img/logo.svg\";\r\nimport \"./Header.scss\";\r\n\r\nimport { Menu, Dropdown, Icon, Button, Avatar } from \"antd\";\r\n\r\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"_\", v: \"_\" });\r\nconst b = cn(\"site-header\");\r\n\r\nconst userMenu = (\r\n  <Menu>\r\n    <Menu.Item key=\"0\">\r\n      <a href=\"#\">Личный кабинет</a>\r\n    </Menu.Item>\r\n    <Menu.Item key=\"1\">\r\n      <a href=\"#\">Выйти</a>\r\n    </Menu.Item>\r\n  </Menu>\r\n);\r\n\r\nconst formMenu = (\r\n  <Menu>\r\n    <Menu.Item key=\"0\">\r\n      <a href=\"#\">Копировать</a>\r\n    </Menu.Item>\r\n    <Menu.Item key=\"1\">\r\n      <a href=\"#\">Удалить</a>\r\n    </Menu.Item>\r\n  </Menu>\r\n);\r\n\r\nexport const Header = (props: any) => {\r\n  return (\r\n    <header className={b()}>\r\n      <div className={b(\"inner\")}>\r\n        <div className={b(\"logo-wrapper\")}>\r\n          <img src={logo} />\r\n\r\n          <div>\r\n            <Button size=\"small\" className={b(\"save\")}>\r\n              Сохранить\r\n            </Button>\r\n            <Dropdown overlay={formMenu} trigger={[\"click\"]}>\r\n              <a className=\"ant-dropdown-link\" href=\"#\">\r\n                <Icon type=\"more\" style={{ fontSize: \"16px\", color: \"#000\" }} />\r\n              </a>\r\n            </Dropdown>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={b(\"menu\")}>\r\n          <Avatar\r\n            style={{ backgroundColor: \"#87d068\" }}\r\n            className={b(\"avatar\")}\r\n            src=\"https://avatars3.githubusercontent.com/u/40214545?s=460&v=4\"\r\n          />\r\n          <Dropdown overlay={userMenu} trigger={[\"click\"]}>\r\n            <a className=\"ant-dropdown-link\" href=\"#\">\r\n              <div className={b(\"username\")}>Юля Красивая</div>\r\n              <Icon type=\"down\" style={{ fontSize: \"12px\", color: \"#000\", marginTop: \"3px\", marginLeft: \"5px\" }} />\r\n            </a>\r\n          </Dropdown>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { withNaming } from \"@bem-react/classname\";\r\nimport \"./Footer.scss\";\r\n\r\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"_\", v: \"_\" });\r\nconst b = cn(\"site-footer\");\r\n\r\nexport const Footer = (props: any) => {\r\n  return (\r\n    <footer className={b()}>\r\n      <ul className={b(\"list\")}>\r\n        <li className={b(\"list-item\")}>\r\n          <a href=\"#\" className={b(\"link\")}>\r\n            Пользовательское соглашение\r\n          </a>\r\n        </li>\r\n        <li className={b(\"list-item\")}>\r\n          <a href=\"#\" className={b(\"link\")}>\r\n            Пополнение\r\n          </a>\r\n        </li>\r\n        <li className={b(\"list-item\")}>\r\n          <a href=\"#\" className={b(\"link\")}>\r\n            Регламент удостоверяющего центра\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </footer>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./NavMenu.scss\";\r\n\r\nimport { Menu, Icon } from \"antd\";\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nconst drawMenu = (menuJSON: Object) => {\r\n  let subsCount = 0;\r\n  let itemsCount = 0;\r\n\r\n  const drawMenuRecursive = (menuJSON: Object) => {\r\n    return Object.values(menuJSON).map((item: any) => {\r\n      return item.subitems ? (\r\n        <SubMenu\r\n          key={\"sub\" + subsCount++}\r\n          title={\r\n            <span>\r\n              {item.icon ? <Icon type={item.icon} /> : \"\"}\r\n              <span>{item.title}</span>\r\n            </span>\r\n          }\r\n        >\r\n          {drawMenuRecursive(item.subitems)}\r\n        </SubMenu>\r\n      ) : (\r\n        <Menu.Item key={itemsCount++}>{item.title}</Menu.Item>\r\n      );\r\n    });\r\n  };\r\n\r\n  return drawMenuRecursive(menuJSON);\r\n};\r\n\r\nexport const NavMenu = (props: any) => {\r\n  const { navMenuItems } = props;\r\n  return (\r\n    <Menu style={{ width: 200 }} mode={\"inline\"} theme={\"light\"}>\r\n      {drawMenu(navMenuItems)}\r\n    </Menu>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { withNaming } from \"@bem-react/classname\";\r\nimport \"./Input.scss\";\r\n\r\nimport { Input as AntdInput } from \"antd\";\r\n\r\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"_\", v: \"_\" });\r\nconst b = cn(\"site-input\");\r\n\r\ninterface Props {\r\n  title: string;\r\n  tip: string;\r\n  meta: any;\r\n}\r\n\r\nexport const Input = (props: Props) => {\r\n  const { title, tip, meta } = props;\r\n  const { touched, error, warning } = meta;\r\n  return (\r\n    <div className={b()}>\r\n      <label className={b(\"title\")}>{title}</label>\r\n      <AntdInput size=\"large\" {...props} />\r\n      <span className={b(\"tip\")}>{tip}</span>\r\n      {touched &&\r\n        ((error && <span className={b(\"error\")}>{error}</span>) ||\r\n          (warning && <span className={b(\"warning\")}>{warning}</span>))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { withNaming } from \"@bem-react/classname\";\r\nimport \"./InputNumber.scss\";\r\n\r\nimport { InputNumber as AntdInputNumber } from \"antd\";\r\n\r\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"_\", v: \"_\" });\r\nconst b = cn(\"site-input-number\");\r\n\r\ninterface Props {\r\n  title: string;\r\n  tip: string;\r\n  meta: any;\r\n}\r\n\r\nexport const InputNumber = (props: Props) => {\r\n  const { title, tip, meta } = props;\r\n  const { touched, error, warning } = meta;\r\n  return (\r\n    <div className={b()}>\r\n      <label className={b(\"title\")}>{title}</label>\r\n      <AntdInputNumber size=\"large\" {...props} />\r\n      <span className={b(\"tip\")}>{tip}</span>\r\n      {touched &&\r\n        ((error && <span className={b(\"error\")}>{error}</span>) ||\r\n          (warning && <span className={b(\"warning\")}>{warning}</span>))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { withNaming } from \"@bem-react/classname\";\r\nimport \"./Steps.scss\";\r\n\r\nimport { Steps as AntdSteps } from \"antd\";\r\nconst { Step } = AntdSteps;\r\n\r\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"_\", v: \"_\" });\r\nconst b = cn(\"site-steps\");\r\n\r\ninterface StepInfo {\r\n  title: string;\r\n  subTitle: string;\r\n  description: React.ReactNode;\r\n}\r\n\r\ninterface Props {\r\n  steps: Array<StepInfo>;\r\n  currentStep: number;\r\n}\r\n\r\nexport const Steps = (props: Props) => {\r\n  const { steps, currentStep } = props;\r\n\r\n  return (\r\n    <AntdSteps direction=\"vertical\" size=\"small\" current={currentStep} className={b()}>\r\n      {steps.map((stepData, index) => (\r\n        <Step\r\n          title={stepData.title}\r\n          description={index === currentStep ? stepData.description : \"\"}\r\n          subTitle={stepData.subTitle}\r\n        ></Step>\r\n      ))}\r\n    </AntdSteps>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Breadcrumb, Button } from \"antd\";\r\nimport { withNaming } from \"@bem-react/classname\";\r\nimport \"./Breadcrumbs.scss\";\r\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"_\", v: \"_\" });\r\nconst b = cn(\"site-breadcrumbs\");\r\n\r\ninterface Props {\r\n  backLabel: string;\r\n  items: Array<Object>;\r\n  className: string;\r\n}\r\n\r\nexport const Breadcrumbs = (props: Props) => {\r\n  const { backLabel, items, className } = props;\r\n  return (\r\n    <div className={`${b()} ${className}`}>\r\n      {backLabel && (\r\n        <Button icon=\"arrow-left\" className={b(\"back\")}>\r\n          {backLabel}\r\n        </Button>\r\n      )}\r\n\r\n      <Breadcrumb>\r\n        {items.map((item: any) => (\r\n          <Breadcrumb.Item>\r\n            <a href={item.href}>{item.text}</a>\r\n          </Breadcrumb.Item>\r\n        ))}\r\n      </Breadcrumb>\r\n    </div>\r\n  );\r\n};\r\n\r\nBreadcrumbs.defaultProps = {\r\n  className: \"\"\r\n};\r\n","import React from \"react\";\r\nimport { withNaming } from \"@bem-react/classname\";\r\nimport \"./Select.scss\";\r\n\r\nimport { Select as AntdSelect } from \"antd\";\r\nconst { Option } = AntdSelect;\r\n\r\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"_\", v: \"_\" });\r\nconst b = cn(\"site-input\");\r\n\r\ninterface Props {\r\n  title: string;\r\n  tip: string;\r\n  options: Array<any>;\r\n  meta: any;\r\n}\r\n\r\nexport const Select = (props: Props) => {\r\n  const { title, tip, options, meta } = props;\r\n  const { touched, error, warning } = meta;\r\n\r\n  return (\r\n    <div className={b()}>\r\n      <label className={b(\"title\")}>{title}</label>\r\n      <AntdSelect showSearch size=\"large\" {...props}>\r\n        {options.map(opt => (\r\n          <Option value={opt.val}>{opt.title}</Option>\r\n        ))}\r\n      </AntdSelect>\r\n      <span className={b(\"tip\")}>{tip}</span>\r\n      {touched &&\r\n        ((error && <span className={b(\"error\")}>{error}</span>) ||\r\n          (warning && <span className={b(\"warning\")}>{warning}</span>))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { withNaming } from \"@bem-react/classname\";\r\nimport \"./AutoComplete.scss\";\r\n\r\nimport { AutoComplete as AntdAutoComplete } from \"antd\";\r\nconst { Option } = AntdAutoComplete;\r\n\r\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"_\", v: \"_\" });\r\nconst b = cn(\"site-autocomplete\");\r\n\r\ninterface Props {\r\n  title: string;\r\n  tip: string;\r\n  options: Array<any>;\r\n  meta: any;\r\n}\r\n\r\nexport const AutoComplete = (props: Props) => {\r\n  const { title, tip, options, meta } = props;\r\n  const { touched, error, warning } = meta;\r\n  return (\r\n    <div className={b()}>\r\n      <label className={b(\"title\")}>{title}</label>\r\n      <AntdAutoComplete\r\n        size=\"large\"\r\n        {...props}\r\n        filterOption={(inputValue, option: any) =>\r\n          option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n        }\r\n      >\r\n        {options.map(opt => (\r\n          <Option value={opt.value}>{opt.title}</Option>\r\n        ))}\r\n      </AntdAutoComplete>\r\n      <span className={b(\"tip\")}>{tip}</span>\r\n      {touched &&\r\n        ((error && <span className={b(\"error\")}>{error}</span>) ||\r\n          (warning && <span className={b(\"warning\")}>{warning}</span>))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { withNaming } from \"@bem-react/classname\";\r\nimport \"./Dragger.scss\";\r\n\r\nimport { Upload, Icon } from \"antd\";\r\n\r\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"_\", v: \"_\" });\r\nconst b = cn(\"site-autocomplete\");\r\n\r\ninterface Props {\r\n  title: string;\r\n  tip: string;\r\n}\r\n\r\nexport const Dragger = (props: Props) => {\r\n  const { title, tip } = props;\r\n\r\n  return (\r\n    <div className={b()}>\r\n      <Upload.Dragger {...props}>\r\n        <p className=\"ant-upload-drag-icon\">\r\n          <Icon type=\"inbox\" />\r\n        </p>\r\n        <p className=\"ant-upload-text\">{title}</p>\r\n        <p className=\"ant-upload-hint\">{tip}</p>\r\n      </Upload.Dragger>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { withNaming } from \"@bem-react/classname\";\r\nimport \"./Radio.scss\";\r\n\r\nimport { Radio as AntdRadio } from \"antd\";\r\n\r\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"_\", v: \"_\" });\r\nconst b = cn(\"site-radio\");\r\n\r\ninterface Props {\r\n  value: string;\r\n  title: string;\r\n  name: string;\r\n  meta: any;\r\n  isButton: boolean;\r\n}\r\n\r\nexport const Radio = (props: Props) => {\r\n  const { title, value, name, meta, isButton } = props;\r\n  const { touched, error, warning } = meta;\r\n  return (\r\n    <React.Fragment>\r\n      {isButton ? (\r\n        <AntdRadio.Button value={value} name={name} {...props}>\r\n          {title}\r\n        </AntdRadio.Button>\r\n      ) : (\r\n        <AntdRadio value={value} name={name} {...props}>\r\n          {title}\r\n        </AntdRadio>\r\n      )}\r\n\r\n      {touched &&\r\n        ((error && <span className={b(\"error\")}>{error}</span>) ||\r\n          (warning && <span className={b(\"warning\")}>{warning}</span>))}\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { withNaming } from \"@bem-react/classname\";\r\nimport \"./RadioGroup.scss\";\r\n\r\nimport { Radio as AntdRadio } from \"antd\";\r\n\r\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"_\", v: \"_\" });\r\nconst b = cn(\"site-radio\");\r\n\r\ninterface Props {\r\n  name: string;\r\n  title: string;\r\n  children: any;\r\n}\r\n\r\nexport const RadioGroup = (props: Props) => {\r\n  const { name, title } = props;\r\n\r\n  return (\r\n    <div className={b()}>\r\n      <AntdRadio.Group name={name} {...props}>\r\n        {title && <div>{title}</div>}\r\n        {props.children}\r\n      </AntdRadio.Group>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { withNaming } from \"@bem-react/classname\";\r\nimport \"./DatePicker.scss\";\r\n\r\nimport { DatePicker as AntdDatePicker } from \"antd\";\r\n\r\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"_\", v: \"_\" });\r\nconst b = cn(\"site-datepicker\");\r\n\r\ninterface Props {\r\n  title: string;\r\n  tip: string;\r\n  meta: any;\r\n}\r\n\r\nexport const DatePicker = (props: Props) => {\r\n  const { title, tip, meta } = props;\r\n  const { touched, error, warning } = meta;\r\n  return (\r\n    <div className={b()}>\r\n      <label className={b(\"title\")}>{title}</label>\r\n      <AntdDatePicker size=\"large\" {...props} />\r\n      <span className={b(\"tip\")}>{tip}</span>\r\n      {touched &&\r\n        ((error && <span className={b(\"error\")}>{error}</span>) ||\r\n          (warning && <span className={b(\"warning\")}>{warning}</span>))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { withNaming } from \"@bem-react/classname\";\r\nimport \"./TextArea.scss\";\r\n\r\nimport { Input } from \"antd\";\r\n\r\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"_\", v: \"_\" });\r\nconst b = cn(\"site-textarea\");\r\n\r\ninterface Props {\r\n  title: string;\r\n  tip: string;\r\n  meta: any;\r\n  wrapperClassName: string;\r\n}\r\n\r\nexport const TextArea = (props: Props) => {\r\n  const { title, tip, meta } = props;\r\n  const { touched, error, warning } = meta;\r\n  return (\r\n    <div className={b()}>\r\n      <label className={b(\"title\")}>{title}</label>\r\n      <Input.TextArea {...props} />\r\n      <span className={b(\"tip\")}>{tip}</span>\r\n      {touched &&\r\n        ((error && <span className={b(\"error\")}>{error}</span>) ||\r\n          (warning && <span className={b(\"warning\")}>{warning}</span>))}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextArea.defaultProps = {\r\n  className: \"\"\r\n};\r\n","import React from \"react\";\r\nimport { withNaming } from \"@bem-react/classname\";\r\nimport \"./ActivityOption.scss\";\r\n\r\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"_\", v: \"_\" });\r\nconst b = cn(\"activity-option\");\r\n\r\ninterface Props {\r\n  activityCode: string;\r\n  activityTitle: string;\r\n  onRemove(): void;\r\n  isStarFilled: boolean;\r\n}\r\n\r\nexport const ActivityOption = (props: Props) => {\r\n  const { activityCode, activityTitle, onRemove, isStarFilled } = props;\r\n  return (\r\n    <div className={b()}>\r\n      <div className={b(\"star\", { filled: isStarFilled })}></div>\r\n      <div className={b(\"cross\")} onClick={onRemove}></div>\r\n      <div className={b(\"activity-code\")}>{activityCode}</div>\r\n      <div className={b(\"activity-title\")}>{activityTitle}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nActivityOption.defaultProps = {\r\n  activityCode: \"код деятельности неизвестен\",\r\n  activityTitle: \"название деятельности неизвестно\",\r\n  isStarFilled: false,\r\n  onRemove: () => {}\r\n};\r\n","import React from \"react\";\r\nimport { withNaming } from \"@bem-react/classname\";\r\nimport \"./RequestStatus.scss\";\r\n\r\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"_\", v: \"_\" });\r\nconst b = cn(\"request-status\");\r\n\r\nconst statusObject = {\r\n  KEPready: { color: \"orange\", text: \"Выпущена КЭП\" },\r\n  reject: { color: \"red\", text: \"Отказ в регистрации\" },\r\n  sentToFNS: { color: \"blue\", text: \"Отправлен в ФНС\" },\r\n  registered: { color: \"green\", text: \"Зарегистрирован\" },\r\n  filling: { color: \"orange\", text: \"Заполнение\" },\r\n  signing: { color: \"orange\", text: \"Заполнение\" },\r\n  unknown: { color: \"red\", text: \"Неизвестен\" }\r\n};\r\n\r\nexport const RequestStatus = (props: any) => {\r\n  const { status, className } = props;\r\n  return <span></span>;\r\n  // return <span className={`${b({ [status]: true })} ${className}`}>{statusObject[status].color}</span>;\r\n};\r\n\r\nRequestStatus.defaultProps = {\r\n  status: \"unknown\",\r\n  className: \"\"\r\n};\r\n","/*\r\nТут описывается обертка вокруг antd-компонентов, чтобы связать их с redux-form\r\nВзято отсюда - https://codesandbox.io/s/jzyl70wpk\r\n*/\r\nimport React from \"react\";\r\nimport {\r\n  Input,\r\n  Select,\r\n  AutoComplete,\r\n  Dragger,\r\n  Radio,\r\n  RadioGroup,\r\n  DatePicker,\r\n  TextArea,\r\n  InputNumber\r\n} from \"src/components\";\r\n\r\nconst makeField = (Component: any) => ({ input, meta, children, hasFeedback, label, ...rest }: any) => {\r\n  return <Component {...input} {...rest} meta={meta} children={children} />;\r\n};\r\n\r\nexport const AInput = makeField(Input);\r\nexport const AAutoComplete = makeField(AutoComplete);\r\nexport const ASelect = makeField(Select);\r\nexport const ADragger = makeField(Dragger);\r\nexport const ARadio = makeField(Radio);\r\nexport const ARadioGroup = makeField(RadioGroup);\r\nexport const ADatePicker = makeField(DatePicker);\r\nexport const ATextArea = makeField(TextArea);\r\nexport const AInputNumber = makeField(InputNumber);\r\n","export const handleResponse = (response: any) => {\r\n  if (response.statusText !== \"OK\") {\r\n    const error = response.statusText;\r\n    return Promise.reject(error);\r\n  }\r\n\r\n  return response.text().then((text: string) => {\r\n    const data = text && JSON.parse(text);\r\n    return data;\r\n  });\r\n};\r\n","import { baseURL } from \"src/constants\";\r\nimport { handleResponse } from \"src/helpers\";\r\n\r\nfunction getAutoComplete() {\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" }\r\n  };\r\n  const query = baseURL + \"/secondNameAutoComplete\";\r\n\r\n  return fetch(query, requestOptions).then(handleResponse);\r\n}\r\n\r\nexport const inputService = {\r\n  getAutoComplete\r\n};\r\n","import { inputConstants } from \"src/constants/index\";\r\n\r\nimport { inputService } from \"src/services\";\r\n\r\nfunction loadAutoComplete(form: string, inputName: string) {\r\n  return (dispatch: any) => {\r\n    dispatch(request());\r\n\r\n    inputService.getAutoComplete().then(\r\n      data => {\r\n        dispatch(success(data));\r\n      },\r\n      error => {\r\n        dispatch(failure(error));\r\n      }\r\n    );\r\n\r\n    function request() {\r\n      return { type: inputConstants.AUTOCOMPLETE_LOAD };\r\n    }\r\n    function success(data: any) {\r\n      return { type: inputConstants.AUTOCOMPLETE_LOAD_SUCCESS, data, form, inputName };\r\n    }\r\n    function failure(error: any) {\r\n      return { type: inputConstants.AUTOCOMPLETE_LOAD_FAILED, error };\r\n    }\r\n  };\r\n}\r\n\r\nexport const inputActions = {\r\n  loadAutoComplete\r\n};\r\n","export const formName = \"Common\";\r\n","import { inputActions } from \"src/actions\";\r\nimport { store } from \"src/helpers\";\r\nimport { formName } from \"./constants\";\r\n\r\n// список полей, которым нужен запрос на сервер при изменении\r\nconst serverRequestNeededFields = [\"secondName\"];\r\n\r\nexport default function validate(values: any, dispatch: any): any {\r\n  // ошибки для валидации\r\n  const errors: any = {};\r\n\r\n  if (!values.secondName) {\r\n    errors[\"secondName\"] = \"Ну заполни плис!\";\r\n  }\r\n\r\n  /* заберем из store название последнего  измененого inputа и узнаем, нужно ли грузить ему autocomlete варианты */\r\n  const { lastChangedField } = store.getState().input;\r\n\r\n  // если пользователь что-то ввел в поле и это поле есть в списке полей, которым нужно обратиться к серверу\r\n  if (lastChangedField && serverRequestNeededFields.indexOf(lastChangedField) !== -1) {\r\n    dispatch.dispatch(inputActions.loadAutoComplete(formName, lastChangedField));\r\n  }\r\n\r\n  return errors;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { withNaming } from \"@bem-react/classname\";\r\nimport \"./Common.scss\";\r\nimport { AInput, AAutoComplete, ADragger, ARadio, ARadioGroup } from \"src/helpers\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\nimport validate from \"./validate\";\r\nimport warn from \"./warn\";\r\n\r\nimport { formName } from \"./constants\";\r\n\r\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"_\", v: \"_\" });\r\nconst sf = cn(\"site-form\");\r\nconst b = cn(\"common-form\");\r\n\r\nclass CommonForm extends Component<any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  renderNalogRadio = () => {\r\n    return (\r\n      <div>\r\n        <Field name=\"q\" component={ARadioGroup} buttonStyle=\"solid\">\r\n          <Field type=\"radio\" name=\"taxMode\" value=\"osno\" title=\"ОСНО\" component={ARadio} />\r\n          <Field type=\"radio\" name=\"taxMode\" value=\"usn\" title=\"УСН (Доходы)\" component={ARadio} />\r\n        </Field>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { handleSubmit, autoCompleteData } = this.props;\r\n    return (\r\n      <form onSubmit={handleSubmit} className={`${sf()} ${b()}`}>\r\n        <div className={sf(\"section-wrapper\")}>\r\n          <section className={sf(\"section\")}>\r\n            <h2 className={sf(\"title\")}>Контакты и общая информация</h2>\r\n            <div className={sf(\"inputs-grid\")}>\r\n              <Field\r\n                title=\"Фамилия\"\r\n                tip=\"обязательное поле!\"\r\n                name=\"secondName\"\r\n                options={autoCompleteData[\"secondName\"] || []}\r\n                component={AAutoComplete}\r\n              />\r\n              <Field title=\"Имя\" tip=\"обязательное поле!\" name=\"firstName\" component={AInput} />\r\n              <Field title=\"Отчество\" tip=\"обязательное поле!\" name=\"patronymic\" component={AInput} />\r\n              <Field title=\"Номер телефона\" tip=\"обязательное поле!\" name=\"phone\" component={AInput} />\r\n              <Field title=\"Электронная почта\" tip=\"обязательное поле!\" name=\"email\" component={AInput} />\r\n            </div>\r\n\r\n            <div className={sf(\"radio\")}>\r\n              <label className={sf(\"radio-title\")}>Налоговый режим</label>\r\n              {this.renderNalogRadio()}\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  const autoCompleteData = state.input.autoCompleteData[formName] || {};\r\n  return { autoCompleteData };\r\n};\r\n\r\nconst connectedComponent = connect(\r\n  mapStateToProps,\r\n  null\r\n)(\r\n  reduxForm({\r\n    form: formName,\r\n    validate,\r\n    warn\r\n  })(CommonForm)\r\n);\r\n\r\nexport { connectedComponent as CommonForm };\r\n","export default function warn(values: any, dispatch: any): any {\r\n  // предупреждения для валидации\r\n  const warn: any = {};\r\n\r\n  if (values.secondName && values.secondName.length < 3) {\r\n    warn[\"secondName\"] = \"Хотя бы 3 символа тут должно быть!\";\r\n  }\r\n\r\n  return warn;\r\n}\r\n","export const formName = \"Passport\";\r\n","import { inputActions } from \"src/actions\";\r\nimport { store } from \"src/helpers\";\r\nimport { formName } from \"./constants\";\r\n\r\n// список полей, которым нужен запрос на сервер при изменении\r\nconst serverRequestNeededFields = [\"secondName\"];\r\n\r\nexport default function validate(values: any, dispatch: any): any {\r\n  // ошибки для валидации\r\n  const errors: any = {};\r\n\r\n  if (!values.secondName) {\r\n    errors[\"secondName\"] = \"Ну заполни плис!\";\r\n  }\r\n\r\n  /* заберем из store название последнего  измененого inputа и узнаем, нужно ли грузить ему autocomlete варианты */\r\n  const { lastChangedField } = store.getState().input;\r\n\r\n  // если пользователь что-то ввел в поле и это поле есть в списке полей, которым нужно обратиться к серверу\r\n  if (lastChangedField && serverRequestNeededFields.indexOf(lastChangedField) !== -1) {\r\n    dispatch.dispatch(inputActions.loadAutoComplete(formName, lastChangedField));\r\n  }\r\n\r\n  return errors;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { withNaming } from \"@bem-react/classname\";\r\nimport \"./Passport.scss\";\r\nimport { AInput, ADatePicker, ARadio, ARadioGroup, ATextArea } from \"src/helpers\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport validate from \"./validate\";\r\nimport warn from \"./warn\";\r\n\r\nimport { formName } from \"./constants\";\r\n\r\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"_\", v: \"_\" });\r\nconst sf = cn(\"site-form\");\r\nconst b = cn(\"passport-form\");\r\n\r\nclass PassportForm extends Component<any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { handleSubmit } = this.props;\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit} className={`${sf()} ${b()}`}>\r\n        <div className={sf(\"section-wrapper\")}>\r\n          <section className={sf(\"section\")}>\r\n            <div className={b(\"row\")}>\r\n              <h2 className={sf(\"title\")}>Паспорт</h2>\r\n              <Field name=\"citizenship\" component={ARadioGroup} buttonStyle=\"solid\">\r\n                <Field\r\n                  type=\"radio\"\r\n                  name=\"citizenship\"\r\n                  isButton={true}\r\n                  value=\"RF\"\r\n                  title=\"Гражданин РФ\"\r\n                  component={ARadio}\r\n                />\r\n                <Field\r\n                  type=\"radio\"\r\n                  name=\"citizenship\"\r\n                  isButton={true}\r\n                  value=\"FOREIGN\"\r\n                  title=\"Иностранный гражданин\"\r\n                  component={ARadio}\r\n                />\r\n              </Field>\r\n            </div>\r\n\r\n            <div className={`${sf(\"inputs-grid\")} ${b(\"inputs-grid\")}`}>\r\n              <Field title=\"Номер паспорта\" tip=\"обязательное поле!\" name=\"passportNumber\" component={AInput} />\r\n              <Field\r\n                title=\"Дата выдачи\"\r\n                tip=\"обязательное поле!\"\r\n                name=\"passportGetDate\"\r\n                component={ADatePicker}\r\n                placeholder=\"\"\r\n                onFocus={(e: any) => e.preventDefault()}\r\n                onBlur={(e: any) => e.preventDefault()}\r\n              />\r\n              <Field title=\"Код подразделения\" tip=\"обязательное поле!\" name=\"subUnitCode\" component={AInput} />\r\n              <div className={b(\"getSource\")}>\r\n                <Field title=\"Кем выдан\" tip=\"обязательное поле!\" name=\"getSource\" component={ATextArea} />\r\n              </div>\r\n              <Field\r\n                title=\"Дата Рождения\"\r\n                tip=\"обязательное поле!\"\r\n                name=\"bornDate\"\r\n                component={ADatePicker}\r\n                placeholder=\"\"\r\n                onFocus={(e: any) => e.preventDefault()}\r\n                onBlur={(e: any) => e.preventDefault()}\r\n              />\r\n              <div className={b(\"bornPlace\")}>\r\n                <Field title=\"Место рождения\" tip=\"обязательное поле!\" name=\"bornPlace\" component={AInput} />\r\n              </div>\r\n              <Field title=\"СНИЛС\" tip=\"обязательное поле!\" name=\"SNILS\" component={AInput} />\r\n              <Field title=\"ИНН\" tip=\"обязательное поле!\" name=\"INN\" component={AInput} />\r\n            </div>\r\n            <Field name=\"sex\" title=\"Пол\" component={ARadioGroup}>\r\n              <div className={b(\"row\")}>\r\n                <Field type=\"radio\" name=\"sex\" value=\"male\" title=\"Мужчина\" component={ARadio} />\r\n                <Field type=\"radio\" name=\"sex\" value=\"female\" title=\"Женщина\" component={ARadio} />\r\n              </div>\r\n            </Field>\r\n          </section>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  const autoCompleteData = state.input.autoCompleteData[formName] || {};\r\n  return { autoCompleteData };\r\n};\r\n\r\nconst connectedComponent = connect(\r\n  mapStateToProps,\r\n  null\r\n)(\r\n  reduxForm({\r\n    form: formName,\r\n    initialValues: { citizenship: \"RF\", sex: \"male\" },\r\n    validate,\r\n    warn\r\n  })(PassportForm)\r\n);\r\n\r\nexport { connectedComponent as PassportForm };\r\n","export default function warn(values: any, dispatch: any): any {\r\n  // предупреждения для валидации\r\n  // const warn: any = {};\r\n  //\r\n  // if (values.secondName && values.secondName.length < 3) {\r\n  //   warn[\"secondName\"] = \"Хотя бы 3 символа тут должно быть!\";\r\n  // }\r\n  //\r\n  // return warn;\r\n}\r\n","export const formName = \"Files\";\r\n","import React, { Component } from \"react\";\r\nimport { withNaming } from \"@bem-react/classname\";\r\nimport \"./Files.scss\";\r\nimport { ADragger } from \"src/helpers\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\nimport validate from \"./validate\";\r\nimport warn from \"./warn\";\r\n\r\nimport { formName } from \"./constants\";\r\n\r\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"_\", v: \"_\" });\r\nconst sf = cn(\"site-form\");\r\nconst b = cn(\"file-form\");\r\n\r\nclass FilesForm extends Component<any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { handleSubmit } = this.props;\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit} className={`${sf()} ${b()}`}>\r\n        <div className={sf(\"files\")}>\r\n          <h3 className={sf(\"files-title\")}>\r\n            Загрузка <br /> документов\r\n          </h3>\r\n          <div className={sf(\"dragger\")}>\r\n            <Field title=\"Скан паспорта\" tip=\"Перетяните файлы в эту область\" name=\"passport\" component={ADragger} />\r\n          </div>\r\n          <div className={sf(\"dragger\")}>\r\n            <Field\r\n              title=\"Скан прописки\"\r\n              tip=\"Перетяните файлы в эту область\"\r\n              name=\"registration\"\r\n              component={ADragger}\r\n            />\r\n          </div>\r\n          <div className={sf(\"dragger\")}>\r\n            <Field title=\"Скан СНИЛС\" tip=\"Перетяните файлы в эту область\" name=\"SNILS\" component={ADragger} />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {};\r\n};\r\n\r\nconst connectedComponent = connect(\r\n  mapStateToProps,\r\n  null\r\n)(\r\n  reduxForm({\r\n    form: formName,\r\n    validate,\r\n    warn\r\n  })(FilesForm)\r\n);\r\n\r\nexport { connectedComponent as FilesForm };\r\n","// список полей, которым нужен запрос на сервер при изменении\r\n\r\nexport default function validate(values: any, dispatch: any): any {\r\n  // ошибки для валидации\r\n  const errors: any = {};\r\n\r\n  return errors;\r\n}\r\n","export default function warn(values: any, dispatch: any): any {\r\n  // предупреждения для валидации\r\n  const warn: any = {};\r\n\r\n  return warn;\r\n}\r\n","export const formName = \"Registration\";\r\n","import { inputActions } from \"src/actions\";\r\nimport { store } from \"src/helpers\";\r\nimport { formName } from \"./constants\";\r\n\r\n// список полей, которым нужен запрос на сервер при изменении\r\nconst serverRequestNeededFields = [\"secondName\"];\r\n\r\nexport default function validate(values: any, dispatch: any): any {\r\n  // ошибки для валидации\r\n  const errors: any = {};\r\n\r\n  if (!values.secondName) {\r\n    errors[\"secondName\"] = \"Ну заполни плис!\";\r\n  }\r\n\r\n  /* заберем из store название последнего  измененого inputа и узнаем, нужно ли грузить ему autocomlete варианты */\r\n  const { lastChangedField } = store.getState().input;\r\n\r\n  // если пользователь что-то ввел в поле и это поле есть в списке полей, которым нужно обратиться к серверу\r\n  if (lastChangedField && serverRequestNeededFields.indexOf(lastChangedField) !== -1) {\r\n    dispatch.dispatch(inputActions.loadAutoComplete(formName, lastChangedField));\r\n  }\r\n\r\n  return errors;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { withNaming } from \"@bem-react/classname\";\r\nimport \"./Registration.scss\";\r\nimport { AInput } from \"src/helpers\";\r\nimport { Icon } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport validate from \"./validate\";\r\nimport warn from \"./warn\";\r\n\r\nimport { formName } from \"./constants\";\r\n\r\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"_\", v: \"_\" });\r\nconst sf = cn(\"site-form\");\r\nconst b = cn(\"registration-form\");\r\n\r\nclass RegistrationForm extends Component<any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { handleSubmit } = this.props;\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit} className={`${sf()} ${b()}`}>\r\n        <div className={sf(\"section-wrapper\")}>\r\n          <section className={sf(\"section\")}>\r\n            <h2 className={sf(\"title\")}>Адрес регистрации</h2>\r\n            <div className={`${sf(\"inputs-grid\")} ${b(\"inputs-grid\")}`}>\r\n              <div className={b(\"address\")}>\r\n                <Field\r\n                  placeholder=\"Введите адрес в свободной форме\"\r\n                  name=\"address\"\r\n                  suffix={<Icon type=\"search\" style={{ color: \"rgba(0,0,0,.45)\" }} />}\r\n                  component={AInput}\r\n                />\r\n              </div>\r\n\r\n              <Field title=\"Индекс\" tip=\"обязательное поле!\" name=\"postcode\" component={AInput} />\r\n              <Field title=\"Код региона\" tip=\"обязательное поле!\" name=\"regionCode\" component={AInput} />\r\n              <Field title=\"Код регистр. органа\" tip=\"обязательное поле!\" name=\"registerCode\" component={AInput} />\r\n\r\n              <Field title=\"Район\" tip=\"обязательное поле!\" name=\"district\" component={AInput} />\r\n              <div className={b(\"districtName\")}>\r\n                <Field title=\"Наименование района\" tip=\"обязательное поле!\" name=\"districtName\" component={AInput} />\r\n              </div>\r\n\r\n              <Field title=\"Населенный пункт\" tip=\"обязательное поле!\" name=\"locality\" component={AInput} />\r\n              <div className={b(\"localityName\")}>\r\n                <Field\r\n                  title=\"Наименование населенного пункта\"\r\n                  tip=\"обязательное поле!\"\r\n                  name=\"localityName\"\r\n                  component={AInput}\r\n                />\r\n              </div>\r\n\r\n              <Field title=\"Улица\" tip=\"обязательное поле!\" name=\"street\" component={AInput} />\r\n              <div className={b(\"streetName\")}>\r\n                <Field title=\"Наименование улицы\" tip=\"обязательное поле!\" name=\"streetName\" component={AInput} />\r\n              </div>\r\n\r\n              <Field title=\"Дом\" tip=\"обязательное поле!\" name=\"house\" component={AInput} />\r\n              <Field title=\"Номер дома\" tip=\"обязательное поле!\" name=\"houseNumber\" component={AInput} />\r\n              <Field title=\"Корпус\" tip=\"обязательное поле!\" name=\"building\" component={AInput} />\r\n\r\n              <Field title=\"Номер корпуса\" tip=\"обязательное поле!\" name=\"buildingNumber\" component={AInput} />\r\n              <Field title=\"Квартира\" tip=\"обязательное поле!\" name=\"flat\" component={AInput} />\r\n              <Field title=\"Номер квартиры\" tip=\"обязательное поле!\" name=\"flatNumber\" component={AInput} />\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  // const autoCompleteData = state.input.autoCompleteData[formName] || {};\r\n  // return { autoCompleteData };\r\n};\r\n\r\nconst connectedComponent = connect(\r\n  mapStateToProps,\r\n  null\r\n)(\r\n  reduxForm({\r\n    form: formName,\r\n    validate,\r\n    warn\r\n  })(RegistrationForm)\r\n);\r\n\r\nexport { connectedComponent as RegistrationForm };\r\n","export default function warn(values: any, dispatch: any): any {\r\n  // предупреждения для валидации\r\n  // const warn: any = {};\r\n  //\r\n  // if (values.secondName && values.secondName.length < 3) {\r\n  //   warn[\"secondName\"] = \"Хотя бы 3 символа тут должно быть!\";\r\n  // }\r\n  //\r\n  // return warn;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { withNaming } from \"@bem-react/classname\";\r\nimport \"./Activity.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button } from \"antd\";\r\nimport { ActivityOption } from \"src/components\";\r\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"_\", v: \"_\" });\r\nconst b = cn(\"activity-form\");\r\nconst sf = cn(\"site-form\");\r\n\r\nclass ActivityForm extends Component<any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { handleSubmit } = this.props;\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit} className={b()}>\r\n        <div className={sf(\"section-wrapper\")}>\r\n          <section className={sf(\"section\")}>\r\n            <h2 className={sf(\"title\")}>Виды деятельности</h2>\r\n\r\n            <Button type=\"primary\" size=\"large\" className={b(\"OKVED-btn\")}>\r\n              Выбрать ОКВЭД\r\n            </Button>\r\n\r\n            <div className={b(\"tip\")}>\r\n              <div className={b(\"tip-star\")}></div>\r\n              <div className={b(\"tip-text\")}>Выберите основной вид деятельности из списка</div>\r\n            </div>\r\n\r\n            <div className={b(\"selected-activity\")}>\r\n              <ActivityOption activityCode=\"2.20\" activityTitle=\"Лесозаготовки\" isStarFilled={true} />\r\n            </div>\r\n\r\n            <h3 className={sf(\"subtitle\")}>Дополнительные виды деятельности</h3>\r\n\r\n            <div className={b(\"additional-activities\")}>\r\n              <ActivityOption\r\n                activityCode=\"2.20\"\r\n                activityTitle=\"Добыча и обогащение бурого угля (лигнита)\"\r\n                isStarFilled={false}\r\n              />\r\n              <ActivityOption\r\n                activityCode=\"2.20\"\r\n                activityTitle=\"Сбор и заготовка пищевых лесных ресурсов, недревесных лесных ресурсов и лекарственных растений\"\r\n                isStarFilled={false}\r\n              />\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  // const autoCompleteData = state.input.autoCompleteData[formName] || {};\r\n  // return { autoCompleteData };\r\n};\r\n\r\nconst connectedComponent = connect(\r\n  mapStateToProps,\r\n  null\r\n)(ActivityForm);\r\n\r\nexport { connectedComponent as ActivityForm };\r\n","import React, { Component } from \"react\";\r\nimport { withNaming } from \"@bem-react/classname\";\r\nimport { Divider } from \"antd\";\r\n\r\nimport { CommonForm, PassportForm, FilesForm, RegistrationForm, ActivityForm } from \"./forms\";\r\n\r\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"_\", v: \"_\" });\r\nconst b = cn(\"site-step\");\r\n\r\nexport class Step1 extends Component<any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={b({ \"1\": true })}>\r\n        <div className={b(\"forms\")}>\r\n          <CommonForm />\r\n          <Divider />\r\n          <PassportForm />\r\n          <Divider />\r\n          <RegistrationForm />\r\n          <Divider />\r\n          <ActivityForm />\r\n        </div>\r\n        <FilesForm />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { withNaming } from \"@bem-react/classname\";\r\nimport \"./Main.scss\";\r\nimport \"./../steps/Steps.scss\";\r\n\r\nimport \"./../steps/1/forms/Forms.scss\";\r\nimport { Steps, Breadcrumbs } from \"src/components\";\r\nimport { connect } from \"react-redux\";\r\nimport { Step1 } from \"src/pages/steps\";\r\nimport { Button, Icon } from \"antd\";\r\n\r\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"_\", v: \"_\" });\r\nconst b = cn(\"main-page\");\r\n\r\nconst breadcrumbsData = {\r\n  backLabel: \"Назад в панель управления\",\r\n  items: [{ text: \"Регистрация в ФНС\", href: \"#\" }, { text: \"Регистрация ИП\" }]\r\n};\r\n\r\nclass Main extends Component<any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  renderAside = () => {\r\n    const { currentStep, isStepLoading, changeStep } = this.props;\r\n\r\n    const generateButton = (title: string) => {\r\n      return (\r\n        <React.Fragment>\r\n          <Button className={b(\"btn\")} onClick={changeStep} disabled={isStepLoading ? true : false}>\r\n            {title}\r\n          </Button>\r\n          {isStepLoading ? <Icon type=\"loading\" /> : \"\"}\r\n        </React.Fragment>\r\n      );\r\n    };\r\n\r\n    const steps = [\r\n      {\r\n        title: \"Заполнение\",\r\n        subTitle: \"Описание\",\r\n        description: generateButton(\"Выпустить КЭП\")\r\n      },\r\n      {\r\n        title: \"Выпуск КЭП\",\r\n        subTitle: \"Описание\",\r\n        description: generateButton(\"Подписать\")\r\n      },\r\n      {\r\n        title: \"Подписание\",\r\n        subTitle: \"Описание\",\r\n        description: generateButton(\"Отправить в ФНС\")\r\n      },\r\n      {\r\n        title: \"Отправка в ФНС\",\r\n        subTitle: \"Описание\",\r\n        description: generateButton(\"Далее\")\r\n      },\r\n      {\r\n        title: \"Регистрация в ФНС\",\r\n        subTitle: \"Описание\",\r\n        description: generateButton(\"Далее\")\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <aside className={b(\"aside\")}>\r\n        <Steps currentStep={currentStep} steps={steps} />\r\n      </aside>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={b()}>\r\n        <div className={b(\"content-inner\")}>\r\n          {this.renderAside()}\r\n          <div className={b(\"wrapper\")}>\r\n            <Breadcrumbs {...breadcrumbsData} className={b(\"breadcrumbs\")} />\r\n            <Step1 />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state: any) {\r\n  // const { currentStep, isStepLoading } = state.form;\r\n  // return {\r\n  //   currentStep,\r\n  //   isStepLoading\r\n  // };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => {\r\n  return {};\r\n};\r\n\r\nconst connectedComponent = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Main);\r\n\r\nexport { connectedComponent as Main };\r\n","import React, { Component } from \"react\";\r\nimport { withNaming } from \"@bem-react/classname\";\r\nimport \"./PersonalAccount.scss\";\r\n\r\nimport { NavMenu } from \"src/components\";\r\nimport { connect } from \"react-redux\";\r\nimport { navMenuItems } from \"src/constants\";\r\n\r\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"_\", v: \"_\" });\r\nconst b = cn(\"personal-account\");\r\n\r\nclass PersonalAccount extends Component<any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={b()}>\r\n        <NavMenu navMenuItems={navMenuItems} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state: any) {\r\n  return {};\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => {\r\n  return {};\r\n};\r\n\r\nconst connectedComponent = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PersonalAccount);\r\n\r\nexport { connectedComponent as PersonalAccount };\r\n","import React from \"react\";\r\nimport { withNaming } from \"@bem-react/classname\";\r\nimport \"./RequestsCommonInfo.scss\";\r\n\r\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"_\", v: \"_\" });\r\nconst b = cn(\"requests-common-info\");\r\n\r\ninterface Props {\r\n  balance: number;\r\n  total: number;\r\n  processing: number;\r\n  ended: number;\r\n  archive: number;\r\n}\r\n\r\nexport const RequestsCommonInfo = (props: Props) => {\r\n  const { balance, total, processing, ended, archive } = props;\r\n  return (\r\n    <div className={b()}>\r\n      <h2 className={b(\"title\")}>Заявки</h2>\r\n      <div className={b(\"data\")}>\r\n        <div className={b(\"data-wrapper\", { balance: true })}>\r\n          <span className={b(\"label\")}>Баланс</span>\r\n          <span className={b(\"value\")}>{balance} ₽</span>\r\n        </div>\r\n\r\n        <div className={b(\"data-wrapper\")}>\r\n          <span className={b(\"value\")}>{total}</span>\r\n          <span className={b(\"label\")}>Всего</span>\r\n        </div>\r\n\r\n        <div className={b(\"data-wrapper\")}>\r\n          <span className={b(\"value\")}>{processing}</span>\r\n          <span className={b(\"label\")}>На регистрации</span>\r\n        </div>\r\n\r\n        <div className={b(\"data-wrapper\")}>\r\n          <span className={b(\"value\")}>{ended}</span>\r\n          <span className={b(\"label\")}>Завершено</span>\r\n        </div>\r\n\r\n        <div className={b(\"data-wrapper\")}>\r\n          <span className={b(\"value\")}>{archive}</span>\r\n          <span className={b(\"label\")}>В архиве</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { withNaming } from \"@bem-react/classname\";\r\nimport \"./FNSregistration.scss\";\r\n\r\nimport { columns } from \"src/constants\";\r\nimport { Tabs, Input, Button, Select, Table } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { RequestsCommonInfo } from \"./RequestsCommonInfo/RequestsCommonInfo\";\r\n\r\nconst { TabPane } = Tabs;\r\nconst { Option } = Select;\r\n\r\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"_\", v: \"_\" });\r\nconst b = cn(\"fns-registration\");\r\n\r\nconst commonInfo = {\r\n  balance: 400000,\r\n  total: 2,\r\n  processing: 6,\r\n  ended: 8,\r\n  archive: 1\r\n};\r\n\r\nconst tabs = [\"Все заявки\", \"Регистрация ООО\", \"Регистрация ИП\", \"Изменения в ИП\", \"Закрытие ИП\"];\r\n\r\nclass FNSregistration extends Component<any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    selectedRowKeys: [] // Check here to configure the default column\r\n  };\r\n\r\n  handleTabChange = (tabIndex: string) => {\r\n    console.log(tabIndex);\r\n  };\r\n\r\n  handleSearchChange = (query: string) => {\r\n    console.log(query);\r\n  };\r\n\r\n  handleShowedTableRows = (val: string) => {\r\n    console.log(\"val = \", val);\r\n  };\r\n\r\n  renderTabs = (tabs: Array<any>) => {\r\n    return (\r\n      <Tabs onChange={this.handleTabChange} type=\"card\">\r\n        {tabs.map((title: string, key: number) => (\r\n          <TabPane tab={title} key={key.toString()}>\r\n            {title}\r\n          </TabPane>\r\n        ))}\r\n      </Tabs>\r\n    );\r\n  };\r\n\r\n  renderTable = () => {\r\n    const data = [];\r\n    for (let i = 0; i < 46; i++) {\r\n      data.push({\r\n        key: i,\r\n        company: `McDonald's ${i}`,\r\n        client: `ИП Иванов Иван Иванович ${i}`,\r\n        INN: Math.floor(Math.random() * 10000000000).toString(),\r\n        dateCreated: new Date().toLocaleDateString(),\r\n        phone: \"8 800 555 35 35\",\r\n        status: <span>shit</span>,\r\n        administration: <a>открыть</a>\r\n      });\r\n    }\r\n\r\n    return <Table className={b(\"table\")} columns={columns} dataSource={data} />;\r\n  };\r\n\r\n  renderControls = () => {\r\n    return (\r\n      <div className={b(\"contorls\")}>\r\n        <Input\r\n          placeholder=\"Можно ввести ФИО ИП или наименование ООО\"\r\n          className={b(\"search\")}\r\n          onChange={(e: any) => this.handleSearchChange(e.target.value)}\r\n        />\r\n\r\n        <div className={b(\"control-items\")}>\r\n          <Button icon=\"copy\" className={b(\"control\")}>\r\n            Копировать\r\n          </Button>\r\n          <Button icon=\"delete\" className={b(\"control\")}>\r\n            Удалить\r\n          </Button>\r\n          <Button icon=\"download\" className={b(\"control\")}>\r\n            Выгрузить счет\r\n          </Button>\r\n          <Select\r\n            defaultValue=\"20\"\r\n            style={{ width: 113 }}\r\n            onChange={this.handleShowedTableRows}\r\n            className={b(\"control\")}\r\n          >\r\n            <Option value=\"20\">20 заявок</Option>\r\n            <Option value=\"40\">40 заявок</Option>\r\n            <Option value=\"80\">80 заявок</Option>\r\n          </Select>\r\n          <div className={b(\"controls-divider\")} />\r\n          <Button icon=\"filter\" className={b(\"button-filter\")}></Button>\r\n          <Button icon=\"more\"></Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={b()}>\r\n        <RequestsCommonInfo {...commonInfo} />\r\n        <div className={b(\"content\")}>\r\n          {this.renderTabs(tabs)}\r\n          {this.renderControls()}\r\n          {this.renderTable()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state: any) {\r\n  return {};\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => {\r\n  return {};\r\n};\r\n\r\nconst connectedComponent = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FNSregistration);\r\n\r\nexport { connectedComponent as FNSregistration };\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./App.scss\";\r\n\r\nimport { Main, PersonalAccount, FNSregistration } from \"./pages\";\r\n\r\nimport { Header, Footer, NavMenu } from \"./components\";\r\n\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport { history } from \"./helpers\";\r\nimport { navMenuItems } from \"src/constants\";\r\n\r\nimport { withNaming } from \"@bem-react/classname\";\r\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"_\", v: \"_\" });\r\nconst b = cn(\"app\");\r\n\r\nexport class App extends Component {\r\n  render() {\r\n    return (\r\n      <div className={b()}>\r\n        <Header />\r\n\r\n        <div className={b(\"wrapper\")}>\r\n          <NavMenu navMenuItems={navMenuItems} />\r\n          <div className={b(\"content\")}>\r\n            <Router history={history}>\r\n              <Switch>\r\n                <Route exact path=\"/\" component={Main} />\r\n                <Route exact path=\"/personalAccount\" component={PersonalAccount} />\r\n                <Route exact path=\"/FNSregistration\" component={FNSregistration} />\r\n              </Switch>\r\n            </Router>\r\n          </div>\r\n        </div>\r\n\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\n\nimport { LocaleProvider } from \"antd\";\nimport ru_RU from \"antd/es/locale-provider/ru_RU\";\nimport moment from \"moment\";\nimport \"moment/locale/ru\";\n\nimport { store } from \"./helpers\";\nimport { App } from \"./App\";\nmoment.locale(\"ru\");\n\nReactDOM.render(\n  <LocaleProvider locale={ru_RU}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </LocaleProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}